import streamlit as st
import streamlit.components.v1 as components
import pandas as pd
import numpy as np
from PIL import Image

st.title('Ml4641 Team 5')
st.header("Final Report")
st.subheader("Intro/Background")
st.write("The National Basketball Association (NBA) is one of the biggest professional sports organizations in the world. With hundreds of players, dozens of teams, and over 1,000 games played per season, there is a vast amount of data available to analyze. Due to this, many efforts have been made to use AI and Machine Learning methods to predict basketball outcomes. IBM first utilized data mining in the 90’s with Advanced Scout, a tool for NBA management to better analyze hidden trends in basketball statistics (Colet, 1997). Independent projects have also been led, like Nigel Ma developing a model to predict a team’s playoff chances (Ma, 2021) or a group of Carnegie Mellon students using classification methods to predict individual game outcomes (Beckler, Wang, Papamichael).")
st.write("In this project, we are attempting to predict the winner of the NBA’s most prestigious recognition—the Most Valuable Player Award, meant to reward the greatest individual performance in competition contained to the given season. A linear regression model will be the foundation of the prediction for the MVP award, derived from a data set of over 15,000 player performances, 40 seasons, and 49 unique features. Using these unique features—including individual player statistics, team(s) played for, win shares, points, playing time, etc. over multiple years, we will train a model to predict the winners of different awards for the upcoming 2023-2024 NBA season.")
st.subheader("Problem Definition")
st.write("Our objective is to create a predictive model that can estimate the chances of an NBA player winning the MVP award. We aim to explore how player performance metrics relate to these award outcomes.")
st.subheader("Data Collection")
st.write("The dataset, sourced from Kaggle, specifically uses the 1982-2022 NBA Player Statistics with MVP Votes. To ensure data cleanliness and compatibility with scikit-learn, missing values in the dataset were filled with the mean of their respective columns, as scikit-learn does not work with null values. Additionally, a criterion was applied to filter out players whose minutes per game fell under one standard deviation from the mean. This step aims to exclude players who typically do not receive MVP votes due to playing time or performance levels considered below the norm.")
st.write("Some columns of the dataset contained missing values, specifically statistics that involved some sort of percentage (i.e. 3 point percentage, free throw percentage, etc.). This was due to some players attempting zero shots, resulting in an undefined value. We decided that the best fix for this was to impute the mean of those columns, essentially making the assumption that if those players were to attempt shots, they would complete them at a percentage equal to the average of all other players in the league.")
st.write("To reduce the size of the dataset and remove irrelevant data (players that have essentially zero chance of winning the MVP award), we determined that for a player’s stats to be taken into account, they must meet a threshold of 10 minutes played per game, around one standard deviation from the mean. This removed around 3,000 rows, which will hopefully aid with model efficiency and accuracy. To further improve our models in the future, we will consider increasing this threshold to further narrow the dataset.")
st.write("UPDATE: After the cleaning of our data, we realized that we want to have an option to predict the current years MVP based on current stats. So we merged all data up until December 4, 2023 to our dataset. This means that our dataset now ranges from 1982 - December 4, 2023.")



st.subheader("Linear Regression")
st.caption("Methods")
st.write("As discussed, our data uses NBA statistics from 1982 - 2022. Our procedure was to perform Linear regression on the data from 1982-2021 and predict the last year so we can compare it to the last year of the dataset.")
st.write("To select the features for training, we made a few important modifications to the dataset. First, we removed some redundant features that could be derived from others; for example, since field goals made can be directly calculated from field goal percentage and field goals attempted, that column was removed.")
st.write("Next, we selected a group of features that we felt were crucial to a player’s MVP chances based on our previous knowledge of the sport. These are features like points, rebounds, assists, field goal percentage, etc.")
st.write("To further select important features, we utilized a basic variance threshold. All columns with a variance less than 1 were removed from the dataset. This was done as an effort to remove statistics that don’t vary much from player to player, and are therefore not informative when training our models. This removed around 15 features, leaving us with around 35. After examining the new list of features, we determined with our knowledge of the sport that they were a good representation of statistics that might impact a player’s MVP chances.")
image = Image.open('variance.png')
st.image(image, caption='Variance of Features')
st.write("Using this approach, we retrieved the 10 actual players with highest award share and compared the same players predicted award share.")
st.write("UPDATE: Additionally, as we updated our dataset to reflect statistics until December 4, 2023, we decided to predict our current NBA season's MVP.")
st.caption("Results")
st.write("To evaluate and analyze our model using quantitative means we decided we could use Root Mean Squared Error(RMSE), Mean Absoluter Error (MAE), or R-squared. We settled on RMSE.")
aimage = Image.open('act10.png')
st.image(aimage, caption='Actual Top 10 Award Share')
pimage = Image.open('pred10.png')
st.image(pimage, caption='Predicted Top 10 Award Share')
pimage = Image.open('sha10.png')
st.image(pimage, caption='Predicted Award Share of Actual Top 10')
plrimage = Image.open('pred23mvplr.png')
st.image(plrimage, caption='Predicted Top 10 Award Share of Current Season')
st.write("UPDATE: After thre re-modification of our data we predicted this current seasons MVP. We found that Joel Embiid is currently the front runner.")
st.write("Originally our result of RMSE was 0.4705452156807155. Since this model is being used for a somewhat high-stakes prediction, and not a rough estimate, this was a higher score than what we would like to achieve.")
st.write("However, it turned out that our RMSE score was very high due to it only using the top 10 scores as comparison. When we reevaluated the RMSE for the full data set it was around .11713, which is much more ideal and shows higher precision and accuracy.")
st.write("A seperate issue we had found was that the model predicted the majority of the same players, just differing rankings or award shares. This reiterates an accuracy problem, one we could possibly aim to fix through further training and usage of different prediction methods. Some methods we could possibly use could be random forest of gradient boosting methods.")
st.write("A major concern to solve, is that the current prediction doesn't account the fact that in real MVP voting, votes for one player mean less votes for the others. This why there are a lot of players with a higher predicted award share from the model than they may get in real life.")

st.subheader("Random Forest Classification")
st.caption("Methods")
st.write("Another method our team utilized was a random forest classifier. In order to use classification, we had to create labels by converting our dataset’s award share column to a ‘was_mvp’ column. We did this by utilizing pandas’ “group by” function to find the player with the highest award share for each season. A 1 in this column indicates that a player was that season’s MVP. This is the list of every player with a 1 in the 'was_mvp' column.")
st.image(Image.open('every_mvp.png'))
st.write("With our data now labeled, we split it into training data (every season up to 2017) and testing data (every season since). Our first approach was to use a logistic regression model, which gave poor results: when feeding test data into the model, it would predict that no player won the MVP, most likely due to imbalanced data (only 1 player is an mvp for every few hundred players in the dataset).")
st.caption("Results")
st.write("We decided the better option would be a random forest, for a couple reasons: it is very good at handling imbalanced data, has a low risk of overfitting, and is good at filtering out inconsequential features. When we first trained our random forest, it performed perfectly with the test dataset, predicting the last 5 MVP’s perfectly.")
st.image(Image.open('last_five_mvps.png'))
st.write("Using the formula below, our test data set performed with an accuracy of 1, meaning it correctly predicted every MVP and did not predict any false negatives or positives.")
st.image(Image.open('accuracy.png'))

st.subheader("Neural Network")
st.caption("Methods")
st.write("In this neural network-based method for predicting NBA award shares, the process begins with feature selection to identify relevant statistics. The selected features, along with the corresponding award shares, are used to train a Multi-Layer Perceptron (MLP) Regressor.")
st.write("The dataset is split into features (X) and the target variable (y), representing award shares. The features are standardized using StandardScaler to ensure uniformity in scale. The neural network model is constructed with three hidden layers, each consisting of 100 neurons, using the Adam solver. The training process involves iterating up to a maximum of 1000 times with a specified alpha value and tolerance using data from 1982 up to 2021. ")
st.write("The trained model is then used to make predictions for the NBA season of 2022. The test data for this year is standardized using the same scaler applied during training. Predictions are made, and the actual and predicted award shares are compared and visualized through a scatter plot.")
st.write("In the process of developing our predictive model for NBA award shares, we not only trained the model on data up to the 2021 season and made predictions for 2022 but also conducted additional tests. These tests involved incrementally training and predicting award shares for subsequent years, starting from 1982. The objective was to assess the correlation benefits derived from increased volumes of training data over time.")
st.caption("Results")
st.write("The plots below illustrate the relationship between the true labels (actual award shares) and predicted labels, providing a visual representation of the model's performance. ")
nn1985image = Image.open('nn1985.png')
st.image(nn1985image, caption='1985 Actual vs Predicted')
nn2000image = Image.open('nn2000.png')
st.image(nn2000image, caption='2000 Actual vs Predicted')
nn2010image = Image.open('nn2010.png')
st.image(nn2010image, caption='2010 Actual vs Predicted')
nn2022image = Image.open('nn2022.png')
st.image(nn2022image, caption='2022 Actual vs Predicted')
st.write("The visual representations clearly demonstrate that incorporating a larger volume of data each year yields predicted values that closely align with the actual values.")
st.write("With our neural network-based method for predicting NBA award shares, the RMSE is 0.12117754866957814 which indicates the average magnitude of errors in the predicted award shares compared to the actual values. The relatively small RMSE implies that the model has good predictive accuracy, and the predicted award shares closely match the actual award shares.")
st.write("Here are our model predictions for the award shares compared to the corresponding actual award shares.")
nnp = Image.open('nnp.png')
st.image(nnp, caption='2022 Predicted')
nna = Image.open('nna.png')
st.image(nna, caption='2022 Actual')

st.subheader("Conclusion")
st.write("In our analysis aimed at predicting the NBA's Most Valuable Player (MVP), we  applied three different machine learning models: linear regression, random forest, and neural networks. This was backed by a comprehensive dataset encompassing player statistics from 1982 to December 4, 2023. Each model was rigorously trained to discern underlying patterns and relationships within this rich historical dataset, with a particular focus on identifying the attributes that have historically correlated with MVP selection.")
st.write("The performance of these models was evaluated based on their Root Mean Square Error (RMSE), a critical metric in predictive analytics that measures the average magnitude of the errors between the predicted and actual values. A lower RMSE value is indicative of higher accuracy and precision in predictions. Remarkably, in our analysis, it was the linear regression model that yielded the lowest RMSE. This outcome indicates that linear regression, despite its relative simplicity compared to the more complex structures of random forests and neural networks, was the most accurate in capturing the nuances and critical factors that contribute to an MVP selection in the NBA.")
st.write("The efficacy of linear regression outlines the power of simpler models in certain predictive scenarios, particularly when dealing with datasets that exhibit linear relationships. Combined, our results, led by the strong performance of the linear regression model, pointed towards Joel Embiid as the most likely candidate for the current season's MVP.")
st.write("In terms of improvement, there are also many external factors that play into MVP award share. The NBA MVP race is often swayed by other intangible factors that extend beyond points, rebounds, and assists. Media narratives play a pivotal role in shaping perceptions of a player's value to their team and the league as a whole. The storytelling surrounding a player's journey, clutch performances, and impact on the game's narrative can significantly influence MVP voting. The model can showcase significant improvement with the ability to incorporate this data.")
st.write("Moreover, the phenomenon of voter fatigue in the NBA is another critical element to consider. As voters are human, there's a natural inclination to seek fresh narratives and recognize new standout performances. This tendency can impact the voting process, with players who have consistently performed at an elite level potentially facing challenges in securing MVP votes due to familiarity and the desire for novelty.")
st.subheader("3 Sources")
st.write("Bhandari, I., Colet, E., Parker, J. et al. Advanced Scout: Data Mining and Knowledge Discovery in NBA Data. Data Mining and Knowledge Discovery 1, 121–125 (1997). https://doi.org/10.1023/A:1009782106822")
st.write("N. Ma, NBA Playoff Prediction Using Several Machine Learning Methods, 2021 3rd International Conference on Machine Learning, Big Data and Business Intelligence (MLBDBI), Taiyuan, China, 2021, pp. 113-116, doi: 10.1109/MLBDBI54094.2021.00030.")
st.write("Beckler, M., Wang, H., &amp; Papamichael, M. (n.d.). (rep.). NBA Oracle. https://www.mbeckler.org/coursework/2008-2009/10701_report.pdf")
st.header("Contibution Table")
conSer = pd.Series(["Update Dataset, Data Collection. Linear Regression, Conclusion", "Video, Random Forest, Other Methods, Streamlit", "Video, Neural Network, Conclusion, Visualizations", "Video, Random Forest, Introduction, Feature Selection", "Video, Neural Network, Problem Definition, Visualizations"], index=["Aditya", "Michael", "Sohum", "William", "David"])
conDf = pd.DataFrame(data=conSer, index=[
                     "Aditya", "Michael", "Sohum", "William", "David"],  columns=["Contributions"])
st.table(conDf)
